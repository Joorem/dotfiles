# Configuration for Alacritty, the GPU enhanced terminal emulator.

import:
  # colorschemes
  # - /Users/jerome/.config/alacritty/colorschemes/ayu-mirage.yml
  # - /Users/jerome/.config/alacritty/colorschemes/nord.yml
  # - /Users/jerome/.config/alacritty/colorschemes/onedark.yml
  - /Users/jerome/.config/alacritty/colorschemes/phaazon.yml
  # - /Users/jerome/.config/alacritty/colorschemes/sonokai-andromeda.yml

  # fonts
  # - /Users/jerome/.config/alacritty/fonts/anonymice-nerd-font-mono.yml
  # - /Users/jerome/.config/alacritty/fonts/firacode-nerd-font-mono.yml
  # - /Users/jerome/.config/alacritty/fonts/hack-nerd-font-mono.yml
  - /Users/jerome/.config/alacritty/fonts/jetbrains-nerd-font-mono.yml

env:
  TERM: xterm-256color

window:
  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background and no title bar buttons
  decorations: none

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: Windowed

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`.
  use_thin_strokes: true

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
background_opacity: 1.0

selection:
  # This string contains all characters that are used as separators for
  # "semantic words" in Alacritty.
  semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true

cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Beam

  # Vi mode cursor style
  #
  # If the vi mode cursor style is `None` or not specified, it will fall back to
  # the style of the active value of the normal cursor.
  #
  # See `cursor.style` for available options.
  vi_mode_style: Block

# Live config reload (changes require restart)
live_config_reload: true

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  #hide_when_typing: false

  url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a
    # URL. The URL is always added to the command as the last parameter.
    #
    # When set to `launcher: None`, URL launching will be disabled completely.
    launcher:
      program: open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when
    # clicking on them. The available modifiers are documented in the key
    # binding section.
    modifiers: Command

key_bindings:
   # macOS only
  - { key: Key0,           mods: Command,            action: ResetFontSize    }
  - { key: Equals,         mods: Command,            action: IncreaseFontSize }
  - { key: Minus,          mods: Command,            action: DecreaseFontSize }
  - { key: K,              mods: Command,            action: ClearHistory     }
  - { key: V,              mods: Command,            action: Paste            }
  - { key: C,              mods: Command,            action: Copy             }
  - { key: C,              mods: Command, mode: Vi,  action: ClearSelection   }
  - { key: Q,              mods: Command,            action: Quit             }
  - { key: N,              mods: Command,            action: SpawnNewInstance }
  - { key: F,              mods: Command,            action: SearchForward    }
  - { key: B,              mods: Command,            action: SearchBackward   }
  - { key: P,              mods: Command,            action: ToggleViMode     }
  - { key: Up,             mods: Command,            action: ScrollPageUp     }
  - { key: Down,           mods: Command,            action: ScrollPageDown   }
  # macOS: French mapping
  - { key: LBracket,       mods: Alt,                chars: "{"               }
  - { key: RBracket,       mods: Alt,                chars: "}"               }
  - { key: LBracket,       mods: Alt|Shift,          chars: "["               }
  - { key: RBracket,       mods: Alt|Shift,          chars: "]"               }
  - { key: 37,             mods: Alt|Shift,          chars: "|"               }
  - { key: 47,             mods: Alt|Shift,          chars: "\\"              }

  #
  # iTerm2 shortcuts for Alacritty
  #

  - { key: Return,         mods: Command,           action: ToggleFullscreen  }

  #
  # iTerm2 shortcuts for tmux
  #

  # Split
  - { key: D,              mods: Command,           chars: "\x02\x25"         } # Ctrl-b %
  - { key: D,              mods: Command|Shift,     chars: "\x02\x22"         } # Ctrl-b "
  # Navigate between panes
  - { key: H,              mods: Command|Shift,     chars: "\x02\x1b\x5b\x44" } # Ctrl-b Left
  - { key: L,              mods: Command|Shift,     chars: "\x02\x1b\x5b\x43" } # Ctrl-b Right
  - { key: K,              mods: Command|Shift,     chars: "\x02\x1b\x5b\x41" } # Ctrl-b Up
  - { key: J,              mods: Command|Shift,     chars: "\x02\x1b\x5b\x42" } # Ctrl-b Down
  # Toggle fullscren pane
  - { key: Return,         mods: Command|Shift,     chars: "\x1b\x4f\x51"     } # F2
  # Resize pane
  - { key: L,              mods: Command|Control,   chars: "\x1b\x1b\x5b\x43" } # Alt-Right
  - { key: H,              mods: Command|Control,   chars: "\x1b\x1b\x5b\x44" } # Alt-Left
  - { key: K,              mods: Command|Control,   chars: "\x1b\x1b\x5b\x41" } # Alt-Up
  - { key: J,              mods: Command|Control,   chars: "\x1b\x1b\x5b\x42" } # Alt-Down
  # Kill pane
  - { key: W,              mods: Command,           chars: "\x02\x78"         } # Ctrl-b x

  # Navigate between windows
  - { key: L,              mods: Command,           chars: "\x02\x6e"         } # Ctrl-b n
  - { key: Right,          mods: Command,           chars: "\x02\x6e"         } # Ctrl-b n
  - { key: H,              mods: Command,           chars: "\x02\x70"         } # Ctrl-b p
  - { key: Left,           mods: Command,           chars: "\x02\x70"         } # Ctrl-b p
  # Select window (Key{0,1,2,3,4,5,6,7,8,9} on a french macOS keyboard)
  - { key: 18,             mods: Command,           chars: "\x02\x31"         } # Ctrl-b 1
  - { key: 19,             mods: Command,           chars: "\x02\x32"         } # Ctrl-b 2
  - { key: 20,             mods: Command,           chars: "\x02\x33"         } # Ctrl-b 3
  - { key: 21,             mods: Command,           chars: "\x02\x34"         } # Ctrl-b 4
  - { key: 23,             mods: Command,           chars: "\x02\x35"         } # Ctrl-b 5
  - { key: 22,             mods: Command,           chars: "\x02\x36"         } # Ctrl-b 6
  - { key: 26,             mods: Command,           chars: "\x02\x37"         } # Ctrl-b 7
  - { key: 28,             mods: Command,           chars: "\x02\x38"         } # Ctrl-b 8
  - { key: 25,             mods: Command,           chars: "\x02\x39"         } # Ctrl-b 9
  # Create windows
  - { key: T,              mods: Command,           chars: "\x02\x63"         } # Ctrl-b c
  # Rename Window
  - { key: I,              mods: Command,           chars: "\x0e"             } # Ctrl-n
  # Broadcast input
  - { key: I,              mods: Command|Alt,       chars: "\x1b\x4f\x52"     } # F3
  # Search by name
  - { key: O,              mods: Command|Shift,     chars: "\x02\x66"         } # Ctrl-b f
